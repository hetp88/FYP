@model List<FYP.Models.Ticket>

@{
    Layout = "_Ticket";
}

<!DOCTYPE html>
<html>
<head>
    <title>Tickets</title>
    <style>
        .card {
            margin-top: 200px;         
            background: #FFFFFF;
            padding: 20px;
            width: auto;
        }

        .search-form {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

            .search-form input[type="text"],
            .search-form select {
                padding: 5px;
                width: 185px;
            }

        table {
            width: auto;
            border-collapse: collapse;
            margin-bottom: 10px;
        }

        th, td {
            padding: 8px;
            text-align: center;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #f2f2f2;
        }

        .no-tickets-message {
            text-align: center;
            font-weight: bold;
        }

        .pagination {
            margin-top: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
        }

            .pagination button {
                padding: 6px 12px;
                margin: 0 2px;
                background-color: white;
                color: black;
                border: none;
                cursor: pointer;
                border-radius: 4px;
                font-size: 12px;
            }

                .pagination button:hover {
                    background-color: #555555;
                }

                .pagination button[disabled] {
                    opacity: 0.6;
                    cursor: not-allowed;
                }
    </style>
    <script>
        window.onload = function () {
            document.getElementsByName("ticketIdQuery")[0].value = "";
            document.getElementsByName("ticketTypeQuery")[0].value = "";
            document.getElementsByName("statusQuery")[0].value = "";
            document.getElementsByName("priorityQuery")[0].value = "";
            document.getElementsByName("resolutionQuery")[0].value = "";
            document.getElementsByName("employeeQuery")[0].value = "";
        };
    </script>
</head>
<body>
    <div class="card">
        <form method="get" action="/Ticket/SearchTicket" class="search-form">
            <div>
                <input type="text" name="ticketIdQuery" placeholder="Ticket ID" />
            </div>
            <div>
                <input type="text" name="userIdQuery" placeholder="User ID" />
            </div>
            <div>
                <input type="text" name="ticketTypeQuery" placeholder="Ticket Type" />
            </div>
            <div>
                <input type="text" name="statusQuery" placeholder="Status" />
            </div>
            <div>
                <input type="text" name="priorityQuery" placeholder="Priority" />
            </div>
            <div>
                <input type="text" name="employeeQuery" placeholder="Employee In-Charge" />
            </div>
            <div class="input-group-append">
                <button class="btn btn-primary" type="submit">Search</button>
            </div>
        </form>

        @if (Model == null || Model.Count == 0)
        {
            <p class="no-tickets-message">No tickets available.</p>
        }
        else
        {
            <table>
                <tr>
                    <th>Ticket ID</th>
                    <th>User ID</th>
                    <th>Ticket Type</th>
                    <th>Description</th>
                    <th>Category</th>
                    <th>Status</th>
                    <th>DateTime</th>
                    <th>Priority</th>
                    <th>Devices Involved</th>
                    <th>Additional Details</th>
                    <th>Resolution</th>
                    <th>Employee In-Charge</th>
                    <th>Escalate In-Charge</th>
                    @if (User.IsInRole("helpdesk agent") || User.IsInRole("support engineer"))
                    {
                        <th>Update</th>
                    }

                    @if (User.IsInRole("helpdesk agent"))
                    {
                        <th>Escalate</th>
                    }
                </tr>

                @foreach (var ticket in Model)
                {
                    <tr>
                        <td>@ticket.TicketId</td>
                        <td>@ticket.UserId</td>
                        <td>@ticket.Type</td>
                        <td>@ticket.Description</td>
                        <td>@ticket.Category</td>
                        <td>@ticket.Status</td>
                        <td>@ticket.DateTime</td>
                        <td>@ticket.Priority</td>
                        <td>@ticket.DevicesInvolved</td>

                        @if (ticket.Additional_Details == null)
                        {
                            <td>-</td>
                        }
                        else
                        {
                            <td>@ticket.Additional_Details</td>
                        }

                        @if (@ticket.Resolution == null)
                        {
                            <td>-</td>
                        }
                        else
                        {
                            <td>@ticket.Resolution</td>
                        }

                        <td>@ticket.EmployeeName</td>

                        @if (ticket.SEname == null)
                        {
                            <td>-</td>
                        }
                        else
                        {
                            <td>@ticket.SEname</td>
                        }

                        @if (((User.IsInRole("helpdesk agent")) && ticket.Status != "closed" && ticket.SEname == null) || ((User.IsInRole("helpdesk agent")) && ticket.Status == "resolved" && ticket.SEname != null))
                        {
                            <td>
                                <a href=@Url.Action("HAUpdateTicket", "Ticket", new { TicketId = ticket.TicketId })
                                   onclick="return confirm('Update Ticket: @ticket.Description?')">
                                    <i class="bi bi-pencil"></i>
                                </a>
                            </td>
                        }
                        else if (User.IsInRole("support engineer") && ticket.Status != "closed")
                        {
                            <td>
                                <a href=@Url.Action("SEResolution", "Ticket", new { TicketId = ticket.TicketId })
                                   onclick="return confirm('Update Ticket: @ticket.Description?')">
                                    <i class="bi bi-pencil"></i>
                                </a>
                            </td>
                        }
                        else
                        {
                            <td></td>
                        }

                        @if ((User.IsInRole("helpdesk agent")) && ticket.Status != "closed" && ticket.SEname == null)
                        {
                            <td>
                                <a href=@Url.Action("EscalateTicket", "Ticket", new { TicketId = ticket.TicketId }) 
                                   onclick="return confirm('Escalate Ticket (ID): @ticket.TicketId?')">
                                    <i class="bi bi-exclamation-triangle"></i>
                                </a>
                            </td>
                        }
                        else
                        {
                            <td></td>
                        }
                    </tr>
                }
            </table>
            <div class="pagination">
                <button onclick="prevPage()">Previous</button>
                <span id="currentPage">Page 1</span>
                <button onclick="nextPage()">Next</button>
            </div>
            <script>
                var currentPage = 1;
                var pageSize = 50;
                var totalPages = Math.ceil(@Model.Count / pageSize);

                                                function displayPage(page) {
                        var rows = document.getElementsByTagName('tr');
                        var startIndex = (page - 1) * pageSize + 1;
                        var endIndex = Math.min(startIndex + pageSize, @Model.Count);

                        for (var i = 1; i < rows.length; i++) {
                            rows[i].style.display = (i >= startIndex && i <= endIndex) ? 'table-row' : 'none';
                        }

                        document.getElementById('currentPage').textContent = 'Page ' + page;
                        currentPage = page;
                    }

                                                function prevPage() {
                        if (currentPage > 1) {
                            displayPage(currentPage - 1);
                        }
                    }

                                                function nextPage() {
                        if (currentPage < totalPages) {
                            displayPage(currentPage + 1);
                        }
                    }

                                                displayPage(1); // Display the initial page
            </script>
        }
    </div>
</body>
</html>
