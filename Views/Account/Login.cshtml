@model FYP.Models.UserLogin

<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.0.2/css/bootstrap.min.css">
    <style>
        body {
            background-color: #000000;
            color: #FFFFFF;
        }

        .container {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .card {
            background-color: #2A2A43;
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 38px;
            margin: 5px;
            flex: 1;
            width: 390px;
            height: 520px;
        }

    </style>
</head>
<body>
    <div class="container">

        <div class="card left">
            <div class="card-header">
                <img src="\Images\Logo.png" style="width: 225.5px; height: 62px;">
            </div>

            <div class="card-body">
                @using (Html.BeginForm("Login", "Account", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    <div class="mb-3 offset-md-4">
                        <h4>Welcome!</h4>
                    </div>
                    <div class="col-md-4 mb-3 offset-md-4">
                        @Html.TextBoxFor(m => m.UserID, new { @class = "form-control", placeholder = "User ID" })
                        @Html.ValidationMessageFor(m => m.UserID, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4 mb-3 offset-md-4">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4 mb-3 offset-md-4">
                        <div class="form-control" style="background-color: transparent; border: none;">
                            @Html.CheckBoxFor(m => m.RememberMe, new { @class = "form-check-input", id = "RememberMe" })
                            <label class="form-check-label" for="RememberMe" style="color: white;">Remember Me</label>
                        </div>
                    </div>
                    <div class="offset-md-4">
                        <button type="submit" class="btn btn-primary">Login</button>
                    </div>
                }
                <div class="offset-md-4">
                    <a href="/Account/ForgetPw">Forgot Password?</a>
                    <a href="/Account/Register" style="margin-left: 205px">Register</a>
                </div>
                @if (!string.IsNullOrEmpty(ViewData["Message"] as string))
                {
                    <div class="col-md-4 mb-3 offset-md-4">
                        <div class="alert alert-warning" role="alert">
                            @ViewData["Message"]
                        </div>
                    </div>
                }
            </div>

            <div class="card-footer">
                <div>
                    <a href="/Account/Policy">Privacy Policy</a>
                    <a href="/Account/TermsConditions" style="margin-left: 40px">Terms & Conditions</a>
                </div>
            </div>
        </div>
    </div>

    @if (Model != null && Model.RedirectToUsers)
    {
        <script>
            window.onload = function () {
                // Redirect to the Users page
                window.location.href = "/Account/Users";
            };
        </script>
    }
</body>
</html>
